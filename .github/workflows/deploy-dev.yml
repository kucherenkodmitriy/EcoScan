name: Deploy to Dev Environment

on:
  push:
    branches: [ main ]
    paths:
      - 'services/bin-status-reporter/**'
      - 'infrastructure/backend/**'
      - '.github/workflows/deploy-dev.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  AWS_REGION: eu-central-1
  ENVIRONMENT: dev

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust and cargo-lambda
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          target: aarch64-unknown-linux-gnu
      
      - name: Install cargo-lambda
        run: |
          cargo install cargo-lambda --version 0.22.0
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          cargo lambda --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-Deploy

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
          
          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Build Lambda Function
        run: |
          cd services/bin-status-reporter
          cargo lambda build --release --arm64 --output-format zip --output-dir ../../target/lambda
          ls -la ../../target/lambda/*.zip
          
      - name: Deploy to AWS
        working-directory: infrastructure/backend
        run: |
          chmod +x deploy.sh
          ./deploy.sh --environment dev --rate-limit 10 --burst-limit 5

      - name: Verify deployment
        run: |
          aws lambda get-function \
            --function-name ecoscan-api-dev-StatusUpdateFunction-* \
            --region eu-central-1